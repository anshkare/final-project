point_difference = mean(kobe_data$point_difference)
)
# Predict assists for these age values
predictions <- fitted(fit, newdata = predictor_data, re_formula = NULL)
predictor_data$predicted_assists <- rowMeans(predictions)
# Custom theme
custom_theme <- theme_minimal(base_size = 15) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"),
legend.position = "top",
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank()
)
# Create the animated plot
animated_plot <- ggplot(predictor_data, aes(x = age, y = predicted_assists)) +
geom_line(color = "blue", size = 1.2) +
geom_point(color = "blue", size = 3) +
labs(
x = "Age",
y = "Predicted Assists",
title = "Effect of Age on Predicted Assists"
) +
custom_theme +
transition_reveal(age) +
ease_aes('linear')
# Animate the plot and save as a GIF
anim <- animate(animated_plot, renderer = gifski_renderer(), nframes = 100, fps = 10, width = 800, height = 600)
# Save the animation
anim_save("animated_plot.gif", animation = anim)
# Specify a CRAN mirror
options(repos = c(CRAN = "https://cran.r-project.org"))
# Install required packages if not already installed
if (!requireNamespace("gifski", quietly = TRUE)) install.packages("gifski")
if (!requireNamespace("gganimate", quietly = TRUE)) install.packages("gganimate")
if (!requireNamespace("transformr", quietly = TRUE)) install.packages("transformr")
if (!requireNamespace("viridis", quietly = TRUE)) install.packages("viridis")
library(gifski)
library(gganimate)
library(transformr)
library(ggplot2)
library(brms)
library(viridis)
# Generate a range of age values
age_range <- seq(min(kobe_data$age), max(kobe_data$age), length.out = 100)
# Create a data frame for predictions
predictor_data <- data.frame(
age = age_range,
turnovers = mean(kobe_data$turnovers),
point_difference = mean(kobe_data$point_difference)
)
# Predict assists for these age values
predictions <- fitted(fit, newdata = predictor_data, re_formula = NULL)
predictor_data$predicted_assists <- rowMeans(predictions)
# Custom theme
custom_theme <- theme_minimal(base_size = 15) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.title = element_text(face = "bold"),
legend.position = "top",
panel.grid.major = element_line(color = "grey80"),
panel.grid.minor = element_blank()
)
# Create the animated plot
animated_plot <- ggplot(predictor_data, aes(x = age, y = predicted_assists)) +
geom_line(color = "blue", size = 1.2) +
geom_point(color = "blue", size = 3) +
labs(
x = "Age",
y = "Predicted Assists",
title = "Effect of Age on Predicted Assists"
) +
custom_theme +
transition_reveal(age) +
ease_aes('linear')
# Animate the plot and save as a GIF
anim <- animate(animated_plot, renderer = gifski_renderer(), nframes = 100, fps = 10, width = 800, height = 600)
# Save the animation
anim_save("animated_plot.gif", animation = anim)
knitr::include_graphics("~/Downloads/kobe-passes-shaq-with-the-ball-v0-9ukxrg3rcdy91.png")
ggplot(kobe_data, aes(x = assists, y = predicted_assists)) +
geom_point(aes(color = assists)) +
geom_smooth(method = "lm", color = "blue", se = FALSE) +
labs(x = "Actual Assists", y = "Predicted Assists",
title = "Actual vs. Predicted Assists") +
theme_minimal()
ggplot(kobe_data, aes(x = assists, y = predicted_assists)) +
geom_point(aes(color = assists)) +
geom_smooth(method = "lm", color = "blue", se = FALSE) +
labs(x = "Actual Assists", y = "Predicted Assists",
title = "Actual vs. Predicted Assists") +
theme_minimal()
suppressMessages(
ggplot(data, aes(x = x_var, y = y_var)) +
geom_point() +
geom_smooth()
)
ggplot(kobe_data, aes(x = assists, y = predicted_assists)) +
geom_point(aes(color = assists)) +
geom_smooth(method = "lm", color = "blue", se = FALSE) +
labs(x = "Actual Assists", y = "Predicted Assists",
title = "Actual vs. Predicted Assists") +
theme_minimal()
suppressMessages(
geom_point(aes(color = assists)) +
geom_smooth(method = "lm", color = "blue", se = FALSE)
)
ggplot(kobe_data, aes(x = assists, y = predicted_assists)) +
geom_point(aes(color = assists)) +
geom_smooth(method = "lm", color = "blue", se = FALSE) +
labs(x = "Actual Assists", y = "Predicted Assists",
title = "Actual vs. Predicted Assists") +
theme_minimal()
suppressMessages(
ggplot(kobe_data, aes(x = assists, y = predicted_assists)) +
geom_point(aes(color = assists)) +
geom_smooth(method = "lm", color = "blue", se = FALSE) +
labs(x = "Actual Assists", y = "Predicted Assists",
title = "Actual vs. Predicted Assists") +
theme_minimal()
)
ggplot(kobe_data, aes(x = assists, y = predicted_assists)) +
geom_point(aes(color = assists)) +
geom_smooth(method = "lm", color = "blue", se = FALSE) +
labs(x = "Actual Assists", y = "Predicted Assists",
title = "Actual vs. Predicted Assists") +
theme_minimal()
#| message: false
#| include: false
#| echo: false
library(tidyverse)
library(brms)
library(dplyr)
library(readr)
library(gtsummary)
knitr::include_graphics(""~/Downloads/kobe-passes-shaq-with-the-ball-v0-9ukxrg3rcdy91.png"")
options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages("ggplot2")
install.packages("gganimate")
install.packages("dplyr")
library(ggplot2)
library(gganimate)
# Example dataset (Replace this with your actual data)
p <- ggplot(kobe_data, aes(x = age, y = assists, color = turnovers, size = point_difference)) +
geom_point() +
labs(title = 'Kobe Bryant\'s Assists Over Time',
x = 'Age',
y = 'Assists',
color = 'Turnovers',
size = 'Point Difference') +
theme_minimal()
# Adding animation
animation <- p +
transition_time(age) +
labs(title = 'Kobe Bryant\'s Assists Over Time: Age {frame_time}')
# Render the animation
animate(animation, nframes = 100, fps = 30)
anim_save("kobe_assists_animation.gif", animation = animation)
options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages("ggplot2")
install.packages("gganimate")
install.packages("dplyr")
library(ggplot2)
library(gganimate)
# Example dataset (Replace this with your actual data)
p <- ggplot(kobe_data, aes(x = age, y = assists, color = turnovers, size = point_difference)) +
geom_point() +
labs(title = 'Kobe Bryant\'s Assists Over Time',
x = 'Age',
y = 'Assists',
color = 'Turnovers',
size = 'Point Difference') +
theme_minimal()
# Adding animation
animation <- p +
transition_time(age) +
labs(title = 'Kobe Bryant\'s Assists Over Time: Age {frame_time}')
# Render the animation
animate(animation, nframes = 100, fps = 30)
anim_save("kobe_assists_animation.gif", animation = animation)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_point() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_point() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#552583") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_point() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_line() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_jitter() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_area() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_boxplot() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_density() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_density(aes(y = assists)) +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_smooth() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_jitter() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_jitter() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_histogram() +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_histogram(aes(y = turnovers)) +
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_point()+
geom_line()+
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_jitter(aes(color = "#c57af6"))+
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_jitter()+
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
# Plot for Turnovers vs. Assists
p1 <- ggplot(kobe_data, aes(x = turnovers, y = assists)) +
geom_jitter(color = "#c57af6")+
labs(title = "Turnovers vs. Assists",
x = "Turnovers",
y = "Assists") +
theme_minimal()
# Plot for Point Difference vs. Assists
p2 <- ggplot(kobe_data, aes(x = point_difference, y = assists)) +
geom_point(aes(color = point_difference)) +
scale_color_gradient(low = "#9d3ab6", high = "#fbd72d") +
labs(title = "Point Difference vs. Assists",
x = "Point Difference",
y = "Assists") +
theme_minimal()
# Print the plots
print(p1)
print(p2)
cat("$$\n\\text{assists} = \\beta_0 + \\beta_1 \\cdot \\text{age} + \\beta_2 \\cdot \\text{turnovers} + \\beta_3 \\cdot \\text{point\\_difference} + \\epsilon\n$$")
cat("$$\n\\text{assists} = \\beta_0 + \\beta_1 \\cdot \\text{age} + \\beta_2 \\cdot \\text{turnovers} + \\beta_3 \\cdot \\text{point\\_difference} + \\epsilon\n$$")
knitr::include_graphics("kobe.png")
knitr::include_graphics("kobe.png")
#| echo: false
library(tidyverse)
library(brms)
library(dplyr)
library(readr)
library(knitr)
library(gridExtra)
library(grid)
